{"message":"cannot assign to immutable captured outer variable in an `FnOnce` closure `x` (Ast)","code":{"code":"E0594","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/cannot-mutate-captured-non-mut-var.rs","byte_start":616,"byte_end":621,"line_start":19,"line_end":19,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"    to_fn_once(move|| { x = 2; });","highlight_start":25,"highlight_end":30}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable captured outer variable in an `FnOnce` closure `s` as mutable (Ast)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/cannot-mutate-captured-non-mut-var.rs","byte_start":749,"byte_end":750,"line_start":23,"line_end":23,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"    to_fn_once(move|| { s.read_to_end(&mut Vec::new()); });","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign twice to immutable variable `x` (Mir)","code":{"code":"E0384","explanation":"\nThis error occurs when an attempt is made to reassign an immutable variable.\nFor example:\n\n```compile_fail,E0384\nfn main() {\n    let x = 3;\n    x = 5; // error, reassignment of immutable variable\n}\n```\n\nBy default, variables in Rust are immutable. To fix this error, add the keyword\n`mut` after the keyword `let` when declaring the variable. For example:\n\n```\nfn main() {\n    let mut x = 3;\n    x = 5;\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/cannot-mutate-captured-non-mut-var.rs","byte_start":616,"byte_end":621,"line_start":19,"line_end":19,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"    to_fn_once(move|| { x = 2; });","highlight_start":25,"highlight_end":30}],"label":"cannot assign twice to immutable variable","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/cannot-mutate-captured-non-mut-var.rs","byte_start":616,"byte_end":621,"line_start":19,"line_end":19,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"    to_fn_once(move|| { x = 2; });","highlight_start":25,"highlight_end":30}],"label":"first assignment to `x`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `s` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/cannot-mutate-captured-non-mut-var.rs","byte_start":749,"byte_end":750,"line_start":23,"line_end":23,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"    to_fn_once(move|| { s.read_to_end(&mut Vec::new()); });","highlight_start":25,"highlight_end":26}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[{"message":"Value not mutable causing this error: `_`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":null}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
