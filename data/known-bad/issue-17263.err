{"message":"cannot borrow `x` (via `x.b`) as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":610,"byte_end":613,"line_start":17,"line_end":17,"column_start":24,"column_end":27,"is_primary":false,"text":[{"text":"    let (a, b) = (&mut x.a, &mut x.b);","highlight_start":24,"highlight_end":27}],"label":"first mutable borrow occurs here (via `x.a`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":620,"byte_end":623,"line_start":17,"line_end":17,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"    let (a, b) = (&mut x.a, &mut x.b);","highlight_start":34,"highlight_end":37}],"label":"second mutable borrow occurs here (via `x.b`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":1090,"byte_end":1091,"line_start":27,"line_end":27,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo` (via `foo.b`) as immutable because `foo` is also borrowed as mutable (via `foo.a`) (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":908,"byte_end":913,"line_start":23,"line_end":23,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"    let (c, d) = (&mut foo.a, &foo.b);","highlight_start":32,"highlight_end":37}],"label":"immutable borrow occurs here (via `foo.b`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":900,"byte_end":905,"line_start":23,"line_end":23,"column_start":24,"column_end":29,"is_primary":false,"text":[{"text":"    let (c, d) = (&mut foo.a, &foo.b);","highlight_start":24,"highlight_end":29}],"label":"mutable borrow occurs here (via `foo.a`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-17263.rs","byte_start":1090,"byte_end":1091,"line_start":27,"line_end":27,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
