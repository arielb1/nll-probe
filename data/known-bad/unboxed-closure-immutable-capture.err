{"message":"closure cannot assign to immutable local variable `x` (Ast)","code":{"code":"E0595","explanation":"\nClosures cannot mutate immutable captured variables.\n\nErroneous code example:\n\n```compile_fail,E0595\nlet x = 3; // error: closure cannot assign to immutable local variable `x`\nlet mut c = || { x += 1 };\n```\n\nMake the variable binding mutable:\n\n```\nlet mut x = 3; // ok!\nlet mut c = || { x += 1 };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":884,"byte_end":886,"line_start":23,"line_end":23,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    || x = 1; //~ ERROR cannot assign","highlight_start":5,"highlight_end":7}],"label":"cannot borrow mutably","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":"consider changing this to `mut x`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"closure cannot assign to immutable local variable `x` (Ast)","code":{"code":"E0595","explanation":"\nClosures cannot mutate immutable captured variables.\n\nErroneous code example:\n\n```compile_fail,E0595\nlet x = 3; // error: closure cannot assign to immutable local variable `x`\nlet mut c = || { x += 1 };\n```\n\nMake the variable binding mutable:\n\n```\nlet mut x = 3; // ok!\nlet mut c = || { x += 1 };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":982,"byte_end":984,"line_start":25,"line_end":25,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    || set(&mut x); //~ ERROR cannot assign","highlight_start":5,"highlight_end":7}],"label":"cannot borrow mutably","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":"consider changing this to `mut x`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"closure cannot assign to immutable local variable `x` (Ast)","code":{"code":"E0595","explanation":"\nClosures cannot mutate immutable captured variables.\n\nErroneous code example:\n\n```compile_fail,E0595\nlet x = 3; // error: closure cannot assign to immutable local variable `x`\nlet mut c = || { x += 1 };\n```\n\nMake the variable binding mutable:\n\n```\nlet mut x = 3; // ok!\nlet mut c = || { x += 1 };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":1026,"byte_end":1028,"line_start":26,"line_end":26,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    || x = 1; //~ ERROR cannot assign","highlight_start":5,"highlight_end":7}],"label":"cannot borrow mutably","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":"consider changing this to `mut x`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"closure cannot assign to immutable local variable `x` (Ast)","code":{"code":"E0595","explanation":"\nClosures cannot mutate immutable captured variables.\n\nErroneous code example:\n\n```compile_fail,E0595\nlet x = 3; // error: closure cannot assign to immutable local variable `x`\nlet mut c = || { x += 1 };\n```\n\nMake the variable binding mutable:\n\n```\nlet mut x = 3; // ok!\nlet mut c = || { x += 1 };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":1124,"byte_end":1126,"line_start":28,"line_end":28,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    || set(&mut x); //~ ERROR cannot assign","highlight_start":5,"highlight_end":7}],"label":"cannot borrow mutably","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":"consider changing this to `mut x`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign to captured outer variable in an `FnMut` closure (Ast)","code":{"code":"E0594","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":708,"byte_end":713,"line_start":19,"line_end":19,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    move || x = 1; //~ ERROR cannot assign","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[{"message":"consider making `x` mutable","code":null,"level":"help","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"mut x","expansion":null}],"children":[],"rendered":null}],"rendered":null}
{"message":"cannot borrow captured outer variable in an `FnMut` closure as mutable (Ast)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":760,"byte_end":761,"line_start":20,"line_end":20,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"    move || set(&mut x); //~ ERROR cannot borrow","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign to captured outer variable in an `FnMut` closure (Ast)","code":{"code":"E0594","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":800,"byte_end":805,"line_start":21,"line_end":21,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    move || x = 1; //~ ERROR cannot assign","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[{"message":"consider making `x` mutable","code":null,"level":"help","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":689,"byte_end":690,"line_start":18,"line_end":18,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let x = 0;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"mut x","expansion":null}],"children":[],"rendered":null}],"rendered":null}
{"message":"cannot borrow captured outer variable in an `FnMut` closure as mutable (Ast)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":852,"byte_end":853,"line_start":22,"line_end":22,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"    move || set(&mut x); //~ ERROR cannot borrow","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `x` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":884,"byte_end":892,"line_start":23,"line_end":23,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    || x = 1; //~ ERROR cannot assign","highlight_start":5,"highlight_end":13}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `x` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":982,"byte_end":996,"line_start":25,"line_end":25,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    || set(&mut x); //~ ERROR cannot assign","highlight_start":5,"highlight_end":19}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `x` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":1026,"byte_end":1034,"line_start":26,"line_end":26,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    || x = 1; //~ ERROR cannot assign","highlight_start":5,"highlight_end":13}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `x` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/unboxed-closure-immutable-capture.rs","byte_start":1124,"byte_end":1138,"line_start":28,"line_end":28,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    || set(&mut x); //~ ERROR cannot assign","highlight_start":5,"highlight_end":19}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 12 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
