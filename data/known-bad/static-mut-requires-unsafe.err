{"message":"cannot assign to immutable static item `a` (Mir)","code":{"code":"E0594","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/static-mut-requires-unsafe.rs","byte_start":509,"byte_end":515,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    a += 3;         //~ ERROR: requires unsafe","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign to immutable static item `a` (Mir)","code":{"code":"E0594","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/static-mut-requires-unsafe.rs","byte_start":556,"byte_end":561,"line_start":15,"line_end":15,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    a = 4;          //~ ERROR: requires unsafe","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"use of mutable static requires unsafe function or block","code":{"code":"E0133","explanation":"\nUnsafe code was used outside of an unsafe function or block.\n\nErroneous code example:\n\n```compile_fail,E0133\nunsafe fn f() { return; } // This is the unsafe code\n\nfn main() {\n    f(); // error: call to unsafe function requires unsafe function or block\n}\n```\n\nUsing unsafe functionality is potentially dangerous and disallowed by safety\nchecks. Examples:\n\n* Dereferencing raw pointers\n* Calling functions via FFI\n* Calling functions marked unsafe\n\nThese safety checks can be relaxed for a section of the code by wrapping the\nunsafe instructions with an `unsafe` block. For instance:\n\n```\nunsafe fn f() { return; }\n\nfn main() {\n    unsafe { f(); } // ok!\n}\n```\n\nSee also https://doc.rust-lang.org/book/first-edition/unsafe.html\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/static-mut-requires-unsafe.rs","byte_start":509,"byte_end":515,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    a += 3;         //~ ERROR: requires unsafe","highlight_start":5,"highlight_end":11}],"label":"use of mutable static","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"use of mutable static requires unsafe function or block","code":{"code":"E0133","explanation":"\nUnsafe code was used outside of an unsafe function or block.\n\nErroneous code example:\n\n```compile_fail,E0133\nunsafe fn f() { return; } // This is the unsafe code\n\nfn main() {\n    f(); // error: call to unsafe function requires unsafe function or block\n}\n```\n\nUsing unsafe functionality is potentially dangerous and disallowed by safety\nchecks. Examples:\n\n* Dereferencing raw pointers\n* Calling functions via FFI\n* Calling functions marked unsafe\n\nThese safety checks can be relaxed for a section of the code by wrapping the\nunsafe instructions with an `unsafe` block. For instance:\n\n```\nunsafe fn f() { return; }\n\nfn main() {\n    unsafe { f(); } // ok!\n}\n```\n\nSee also https://doc.rust-lang.org/book/first-edition/unsafe.html\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/static-mut-requires-unsafe.rs","byte_start":556,"byte_end":561,"line_start":15,"line_end":15,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    a = 4;          //~ ERROR: requires unsafe","highlight_start":5,"highlight_end":10}],"label":"use of mutable static","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"use of mutable static requires unsafe function or block","code":{"code":"E0133","explanation":"\nUnsafe code was used outside of an unsafe function or block.\n\nErroneous code example:\n\n```compile_fail,E0133\nunsafe fn f() { return; } // This is the unsafe code\n\nfn main() {\n    f(); // error: call to unsafe function requires unsafe function or block\n}\n```\n\nUsing unsafe functionality is potentially dangerous and disallowed by safety\nchecks. Examples:\n\n* Dereferencing raw pointers\n* Calling functions via FFI\n* Calling functions marked unsafe\n\nThese safety checks can be relaxed for a section of the code by wrapping the\nunsafe instructions with an `unsafe` block. For instance:\n\n```\nunsafe fn f() { return; }\n\nfn main() {\n    unsafe { f(); } // ok!\n}\n```\n\nSee also https://doc.rust-lang.org/book/first-edition/unsafe.html\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/static-mut-requires-unsafe.rs","byte_start":612,"byte_end":613,"line_start":16,"line_end":16,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    let _b = a;     //~ ERROR: requires unsafe","highlight_start":14,"highlight_end":15}],"label":"use of mutable static","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
