{"message":"cannot borrow `this.x` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/borrowck/borrowck-closures-unique-imm.rs","byte_start":623,"byte_end":629,"line_start":21,"line_end":21,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"        &mut this.x; //~ ERROR cannot borrow","highlight_start":14,"highlight_end":20}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/borrowck/borrowck-closures-unique-imm.rs","byte_start":602,"byte_end":608,"line_start":20,"line_end":20,"column_start":18,"column_end":24,"is_primary":false,"text":[{"text":"        let p = &this.x;","highlight_start":18,"highlight_end":24}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/borrowck/borrowck-closures-unique-imm.rs","byte_start":659,"byte_end":660,"line_start":22,"line_end":22,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    };","highlight_start":5,"highlight_end":6}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"/home/ariel/Rust/rust-emergency/src/librustc_mir/borrow_check.rs:1300: End-user description not implemented for field access on `TyClosure(DefId { krate: CrateNum(0), index: DefIndex(1:10) => borrowck_closures_unique_imm[317d]::main[0]::{{closure}}[0] }, ClosureSubsts { substs: Slice([&mut &mut Foo]) })`","code":null,"level":"error: internal compiler error","spans":[],"children":[],"rendered":null}
note: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports

note: rustc 1.23.0-dev running on x86_64-unknown-linux-gnu

thread 'rustc' panicked at 'Box<Any>', /home/ariel/Rust/rust-emergency/src/librustc_errors/lib.rs:503:8
note: Run with `RUST_BACKTRACE=1` for a backtrace.

