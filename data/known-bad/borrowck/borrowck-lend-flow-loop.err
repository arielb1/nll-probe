{"message":"cannot borrow `*v` as immutable because `v` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1158,"byte_end":1160,"line_start":35,"line_end":35,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":17,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1114,"byte_end":1115,"line_start":32,"line_end":32,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"    let mut x = &mut v;","highlight_start":22,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1193,"byte_end":1194,"line_start":37,"line_end":37,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as immutable because `v` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1396,"byte_end":1398,"line_start":45,"line_end":45,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":17,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1357,"byte_end":1358,"line_start":43,"line_end":43,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"    let mut x = &mut v;","highlight_start":22,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1447,"byte_end":1448,"line_start":48,"line_end":48,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as mutable because `v` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1658,"byte_end":1660,"line_start":57,"line_end":57,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"        borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":25,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1701,"byte_end":1702,"line_start":58,"line_end":58,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":15,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1710,"byte_end":1711,"line_start":60,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as mutable because `v` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1930,"byte_end":1932,"line_start":69,"line_end":69,"column_start":25,"column_end":27,"is_primary":true,"text":[{"text":"        borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":25,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1973,"byte_end":1974,"line_start":70,"line_end":70,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":15,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1982,"byte_end":1983,"line_start":72,"line_end":72,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as mutable because `v` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2263,"byte_end":2265,"line_start":86,"line_end":86,"column_start":21,"column_end":23,"is_primary":true,"text":[{"text":"    borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":21,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2219,"byte_end":2220,"line_start":83,"line_end":83,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":15,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2292,"byte_end":2293,"line_start":87,"line_end":87,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as mutable because `v` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2581,"byte_end":2583,"line_start":100,"line_end":100,"column_start":21,"column_end":23,"is_primary":true,"text":[{"text":"    borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":21,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2537,"byte_end":2538,"line_start":97,"line_end":97,"column_start":15,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":15,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2610,"byte_end":2611,"line_start":101,"line_end":101,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*v` as immutable because `v` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2803,"byte_end":2805,"line_start":109,"line_end":109,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":17,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2872,"byte_end":2873,"line_start":111,"line_end":111,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2915,"byte_end":2916,"line_start":114,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `v` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2872,"byte_end":2873,"line_start":111,"line_end":111,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":23}],"label":"mutable borrow starts here in previous iteration of loop","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2915,"byte_end":2916,"line_start":114,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1157,"byte_end":1160,"line_start":35,"line_end":35,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":16,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1109,"byte_end":1115,"line_start":32,"line_end":32,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"    let mut x = &mut v;","highlight_start":17,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1193,"byte_end":1194,"line_start":37,"line_end":37,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign twice to immutable variable `val` (Mir)","code":{"code":"E0384","explanation":"\nThis error occurs when an attempt is made to reassign an immutable variable.\nFor example:\n\n```compile_fail,E0384\nfn main() {\n    let x = 3;\n    x = 5; // error, reassignment of immutable variable\n}\n```\n\nBy default, variables in Rust are immutable. To fix this error, add the keyword\n`mut` after the keyword `let` when declaring the variable. For example:\n\n```\nfn main() {\n    let mut x = 3;\n    x = 5;\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1364,"byte_end":1430,"line_start":44,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    for _ in 0..3 {","highlight_start":5,"highlight_end":20},{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"cannot assign twice to immutable variable","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1364,"byte_end":1430,"line_start":44,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    for _ in 0..3 {","highlight_start":5,"highlight_end":20},{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"first assignment to `val`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1395,"byte_end":1398,"line_start":45,"line_end":45,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":16,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1352,"byte_end":1358,"line_start":43,"line_end":43,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"    let mut x = &mut v;","highlight_start":17,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1447,"byte_end":1448,"line_start":48,"line_end":48,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1653,"byte_end":1660,"line_start":57,"line_end":57,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"        borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":20,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1700,"byte_end":1702,"line_start":58,"line_end":58,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":14,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1710,"byte_end":1711,"line_start":60,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1925,"byte_end":1932,"line_start":69,"line_end":69,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"        borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":20,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1972,"byte_end":1974,"line_start":70,"line_end":70,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":14,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":1982,"byte_end":1983,"line_start":72,"line_end":72,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2258,"byte_end":2265,"line_start":86,"line_end":86,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":16,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2218,"byte_end":2220,"line_start":83,"line_end":83,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":14,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2292,"byte_end":2293,"line_start":87,"line_end":87,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2576,"byte_end":2583,"line_start":100,"line_end":100,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    borrow_mut(&mut *v); //~ ERROR cannot borrow","highlight_start":16,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2536,"byte_end":2538,"line_start":97,"line_end":97,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"        _x = &v;","highlight_start":14,"highlight_end":16}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2610,"byte_end":2611,"line_start":101,"line_end":101,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*v)` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2802,"byte_end":2805,"line_start":109,"line_end":109,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        borrow(&*v); //~ ERROR cannot borrow","highlight_start":16,"highlight_end":19}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2867,"byte_end":2873,"line_start":111,"line_end":111,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":23}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2915,"byte_end":2916,"line_start":114,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign to `_` because it is borrowed (Mir)","code":{"code":"E0506","explanation":"\nThis error occurs when an attempt is made to assign to a borrowed value.\n\nExample of erroneous code:\n\n```compile_fail,E0506\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let fancy_ref = &fancy_num;\n    fancy_num = FancyNum { num: 6 };\n    // error: cannot assign to `fancy_num` because it is borrowed\n\n    println!(\"Num: {}, Ref: {}\", fancy_num.num, fancy_ref.num);\n}\n```\n\nBecause `fancy_ref` still holds a reference to `fancy_num`, `fancy_num` can't\nbe assigned to a new value as it would invalidate the reference.\n\nAlternatively, we can move out of `fancy_num` into a second `fancy_num`:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let moved_num = fancy_num;\n    fancy_num = FancyNum { num: 6 };\n\n    println!(\"Num: {}, Moved num: {}\", fancy_num.num, moved_num.num);\n}\n```\n\nIf the value has to be borrowed, try limiting the lifetime of the borrow using\na scoped block:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    {\n        let fancy_ref = &fancy_num;\n        println!(\"Ref: {}\", fancy_ref.num);\n    }\n\n    // Works because `fancy_ref` is no longer in scope\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n```\n\nOr by moving the reference into a function:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    print_fancy_ref(&fancy_num);\n\n    // Works because function borrow has ended\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n\nfn print_fancy_ref(fancy_ref: &FancyNum){\n    println!(\"Ref: {}\", fancy_ref.num);\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2863,"byte_end":2873,"line_start":111,"line_end":111,"column_start":13,"column_end":23,"is_primary":false,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":13,"highlight_end":23}],"label":"borrow of `_` occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2867,"byte_end":2873,"line_start":111,"line_end":111,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":23}],"label":"assignment to borrowed `_` occurs here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `v` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2867,"byte_end":2873,"line_start":111,"line_end":111,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":23}],"label":"mutable borrow starts here in previous iteration of loop","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2915,"byte_end":2916,"line_start":114,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*_)` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2863,"byte_end":2873,"line_start":111,"line_end":111,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"            x = &mut v; //~ ERROR cannot borrow","highlight_start":13,"highlight_end":23}],"label":"mutable borrow starts here in previous iteration of loop","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":2915,"byte_end":2916,"line_start":114,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot assign to `r` because it is borrowed (Mir)","code":{"code":"E0506","explanation":"\nThis error occurs when an attempt is made to assign to a borrowed value.\n\nExample of erroneous code:\n\n```compile_fail,E0506\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let fancy_ref = &fancy_num;\n    fancy_num = FancyNum { num: 6 };\n    // error: cannot assign to `fancy_num` because it is borrowed\n\n    println!(\"Num: {}, Ref: {}\", fancy_num.num, fancy_ref.num);\n}\n```\n\nBecause `fancy_ref` still holds a reference to `fancy_num`, `fancy_num` can't\nbe assigned to a new value as it would invalidate the reference.\n\nAlternatively, we can move out of `fancy_num` into a second `fancy_num`:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let moved_num = fancy_num;\n    fancy_num = FancyNum { num: 6 };\n\n    println!(\"Num: {}, Moved num: {}\", fancy_num.num, moved_num.num);\n}\n```\n\nIf the value has to be borrowed, try limiting the lifetime of the borrow using\na scoped block:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    {\n        let fancy_ref = &fancy_num;\n        println!(\"Ref: {}\", fancy_ref.num);\n    }\n\n    // Works because `fancy_ref` is no longer in scope\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n```\n\nOr by moving the reference into a function:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    print_fancy_ref(&fancy_num);\n\n    // Works because function borrow has ended\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n\nfn print_fancy_ref(fancy_ref: &FancyNum){\n    println!(\"Ref: {}\", fancy_ref.num);\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":3361,"byte_end":3368,"line_start":127,"line_end":127,"column_start":19,"column_end":26,"is_primary":false,"text":[{"text":"            if !f(&mut *r) {","highlight_start":19,"highlight_end":26}],"label":"borrow of `r` occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs","byte_start":3332,"byte_end":3341,"line_start":126,"line_end":126,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"            let r: &'r mut usize = produce();","highlight_start":36,"highlight_end":45}],"label":"assignment to borrowed `r` occurs here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
error: internal compiler error: unexpected panic

note: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports

note: rustc 1.23.0-dev running on x86_64-unknown-linux-gnu

thread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', /home/ariel/Rust/rust-master/src/libcore/option.rs:335:20
note: Run with `RUST_BACKTRACE=1` for a backtrace.

