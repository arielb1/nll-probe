{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":730,"byte_end":738,"line_start":28,"line_end":28,"column_start":21,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":21,"highlight_end":29}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":761,"byte_end":769,"line_start":29,"line_end":29,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":807,"byte_end":808,"line_start":31,"line_end":31,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":926,"byte_end":934,"line_start":36,"line_end":36,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let _bar2 = &foo.bar1;  //~ ERROR cannot borrow","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":899,"byte_end":907,"line_start":35,"line_end":35,"column_start":21,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":21,"highlight_end":29}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":972,"byte_end":973,"line_start":38,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1091,"byte_end":1099,"line_start":43,"line_end":43,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1060,"byte_end":1068,"line_start":42,"line_end":42,"column_start":17,"column_end":25,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1;","highlight_start":17,"highlight_end":25}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1137,"byte_end":1138,"line_start":45,"line_end":45,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo` (via `foo.bar2`) as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1356,"byte_end":1364,"line_start":56,"line_end":56,"column_start":21,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":21,"highlight_end":29}],"label":"first mutable borrow occurs here (via `foo.bar1`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1387,"byte_end":1395,"line_start":57,"line_end":57,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar2; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"second mutable borrow occurs here (via `foo.bar2`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1432,"byte_end":1433,"line_start":59,"line_end":59,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo` (via `foo.bar2`) as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1533,"byte_end":1546,"line_start":64,"line_end":64,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: ref mut _bar2 } => {}","highlight_start":21,"highlight_end":34}],"label":"first mutable borrow occurs here (via `foo.bar1`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1554,"byte_end":1567,"line_start":64,"line_end":64,"column_start":42,"column_end":55,"is_primary":true,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: ref mut _bar2 } => {}","highlight_start":42,"highlight_end":55}],"label":"second mutable borrow occurs here (via `foo.bar2`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1613,"byte_end":1614,"line_start":66,"line_end":66,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    }","highlight_start":5,"highlight_end":6}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1698,"byte_end":1706,"line_start":71,"line_end":71,"column_start":21,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":21,"highlight_end":29}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1745,"byte_end":1758,"line_start":73,"line_end":73,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: _ } => {}","highlight_start":21,"highlight_end":34}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1826,"byte_end":1827,"line_start":77,"line_end":77,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because `foo.bar1.int1` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1942,"byte_end":1950,"line_start":82,"line_end":82,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo1 = &foo.bar1; //~ ERROR cannot borrow","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1910,"byte_end":1923,"line_start":81,"line_end":81,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":21,"highlight_end":34}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2034,"byte_end":2035,"line_start":85,"line_end":85,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as immutable because `foo.bar1.int1` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1993,"byte_end":1997,"line_start":83,"line_end":83,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    let _foo2 = &*foo; //~ ERROR cannot borrow","highlight_start":18,"highlight_end":22}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1910,"byte_end":1923,"line_start":81,"line_end":81,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":21,"highlight_end":34}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2034,"byte_end":2035,"line_start":85,"line_end":85,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2118,"byte_end":2131,"line_start":89,"line_end":89,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":21,"highlight_end":34}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2154,"byte_end":2162,"line_start":90,"line_end":90,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2199,"byte_end":2200,"line_start":92,"line_end":92,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2284,"byte_end":2297,"line_start":96,"line_end":96,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":21,"highlight_end":34}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2320,"byte_end":2324,"line_start":97,"line_end":97,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":26}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2361,"byte_end":2362,"line_start":99,"line_end":99,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because `foo.bar1.int1` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2477,"byte_end":2485,"line_start":104,"line_end":104,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2441,"byte_end":2454,"line_start":103,"line_end":103,"column_start":17,"column_end":30,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1.int1;","highlight_start":17,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2522,"byte_end":2523,"line_start":106,"line_end":106,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as mutable because `foo.bar1.int1` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2639,"byte_end":2643,"line_start":111,"line_end":111,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":26}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2603,"byte_end":2616,"line_start":110,"line_end":110,"column_start":17,"column_end":30,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1.int1;","highlight_start":17,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2680,"byte_end":2681,"line_start":113,"line_end":113,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo` (via `foo.bar2`) as immutable because `foo` is also borrowed as mutable (via `foo.bar1`) (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2942,"byte_end":2950,"line_start":126,"line_end":126,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo1 = &foo.bar2; //~ ERROR cannot borrow","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here (via `foo.bar2`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2915,"byte_end":2923,"line_start":125,"line_end":125,"column_start":21,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":21,"highlight_end":29}],"label":"mutable borrow occurs here (via `foo.bar1`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2987,"byte_end":2988,"line_start":128,"line_end":128,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable field `foo.bar1` as mutable (Ast)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":3063,"byte_end":3071,"line_start":132,"line_end":132,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"    let bar1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":21,"highlight_end":29}],"label":"cannot mutably borrow immutable field","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":3025,"byte_end":3028,"line_start":131,"line_end":131,"column_start":9,"column_end":12,"is_primary":false,"text":[{"text":"    let foo = make_foo();","highlight_start":9,"highlight_end":12}],"label":"consider changing this to `mut foo`","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo` (via `foo.bar2.int2`) as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":3194,"byte_end":3207,"line_start":138,"line_end":138,"column_start":21,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":21,"highlight_end":34}],"label":"first mutable borrow occurs here (via `foo.bar1.int1`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":3229,"byte_end":3242,"line_start":139,"line_end":139,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    let foo1 = &mut foo.bar2.int2; //~ ERROR cannot borrow","highlight_start":21,"highlight_end":34}],"label":"second mutable borrow occurs here (via `foo.bar2.int2`)","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":3290,"byte_end":3291,"line_start":142,"line_end":142,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":725,"byte_end":738,"line_start":28,"line_end":28,"column_start":16,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":16,"highlight_end":29}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":756,"byte_end":769,"line_start":29,"line_end":29,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":807,"byte_end":808,"line_start":31,"line_end":31,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":925,"byte_end":934,"line_start":36,"line_end":36,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _bar2 = &foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":894,"byte_end":907,"line_start":35,"line_end":35,"column_start":16,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":16,"highlight_end":29}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":972,"byte_end":973,"line_start":38,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1086,"byte_end":1099,"line_start":43,"line_end":43,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1059,"byte_end":1068,"line_start":42,"line_end":42,"column_start":16,"column_end":25,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1;","highlight_start":16,"highlight_end":25}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1137,"byte_end":1138,"line_start":45,"line_end":45,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1693,"byte_end":1706,"line_start":71,"line_end":71,"column_start":16,"column_end":29,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1;","highlight_start":16,"highlight_end":29}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1745,"byte_end":1758,"line_start":73,"line_end":73,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: _ } => {}","highlight_start":21,"highlight_end":34}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1826,"byte_end":1827,"line_start":77,"line_end":77,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1941,"byte_end":1950,"line_start":82,"line_end":82,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo1 = &foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1905,"byte_end":1923,"line_start":81,"line_end":81,"column_start":16,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":16,"highlight_end":34}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2034,"byte_end":2035,"line_start":85,"line_end":85,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1992,"byte_end":1997,"line_start":83,"line_end":83,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    let _foo2 = &*foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":22}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":1905,"byte_end":1923,"line_start":81,"line_end":81,"column_start":16,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":16,"highlight_end":34}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2034,"byte_end":2035,"line_start":85,"line_end":85,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2113,"byte_end":2131,"line_start":89,"line_end":89,"column_start":16,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":16,"highlight_end":34}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2149,"byte_end":2162,"line_start":90,"line_end":90,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2199,"byte_end":2200,"line_start":92,"line_end":92,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2279,"byte_end":2297,"line_start":96,"line_end":96,"column_start":16,"column_end":34,"is_primary":false,"text":[{"text":"    let bar1 = &mut foo.bar1.int1;","highlight_start":16,"highlight_end":34}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2315,"byte_end":2324,"line_start":97,"line_end":97,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2361,"byte_end":2362,"line_start":99,"line_end":99,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2472,"byte_end":2485,"line_start":104,"line_end":104,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2440,"byte_end":2454,"line_start":103,"line_end":103,"column_start":16,"column_end":30,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1.int1;","highlight_start":16,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2522,"byte_end":2523,"line_start":106,"line_end":106,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2634,"byte_end":2643,"line_start":111,"line_end":111,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2602,"byte_end":2616,"line_start":110,"line_end":110,"column_start":16,"column_end":30,"is_primary":false,"text":[{"text":"    let bar1 = &foo.bar1.int1;","highlight_start":16,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-borrow-from-owned-ptr.rs","byte_start":2680,"byte_end":2681,"line_start":113,"line_end":113,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 25 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
