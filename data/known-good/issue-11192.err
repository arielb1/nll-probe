{"message":"cannot borrow `*ptr` as immutable because it is also borrowed as mutable","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/issue-11192.rs","byte_start":833,"byte_end":838,"line_start":30,"line_end":30,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    test(&*ptr);","highlight_start":10,"highlight_end":15}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/issue-11192.rs","byte_start":687,"byte_end":698,"line_start":25,"line_end":25,"column_start":20,"column_end":31,"is_primary":false,"text":[{"text":"    let mut test = |foo: &Foo| {","highlight_start":20,"highlight_end":31}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/issue-11192.rs","byte_start":891,"byte_end":892,"line_start":32,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/issue-11192.rs","byte_start":747,"byte_end":750,"line_start":27,"line_end":27,"column_start":9,"column_end":12,"is_primary":false,"text":[{"text":"        ptr = box Foo { x: ptr.x + 1 };","highlight_start":9,"highlight_end":12}],"label":"previous borrow occurs due to use of `*ptr` in closure","suggested_replacement":null,"expansion":null}],"children":[],"rendered":"error[E0502]: cannot borrow `*ptr` as immutable because it is also borrowed as mutable\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/issue-11192.rs:30:10\n   |\n25 |     let mut test = |foo: &Foo| {\n   |                    ----------- mutable borrow occurs here\n26 |         println!(\"access {}\", foo.x);\n27 |         ptr = box Foo { x: ptr.x + 1 };\n   |         --- previous borrow occurs due to use of `*ptr` in closure\n...\n30 |     test(&*ptr);\n   |          ^^^^^ immutable borrow occurs here\n31 |     //~^ ERROR: cannot borrow `*ptr` as immutable\n32 | }\n   | - mutable borrow ends here\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to previous error\n\n"}
