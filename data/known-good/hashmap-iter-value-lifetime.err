{"message":"cannot borrow `my_stuff` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":624,"byte_end":632,"line_start":17,"line_end":17,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_stuff.clear(); //~ ERROR cannot borrow","highlight_start":5,"highlight_end":13}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":586,"byte_end":594,"line_start":15,"line_end":15,"column_start":22,"column_end":30,"is_primary":false,"text":[{"text":"    let (_, thing) = my_stuff.iter().next().unwrap();","highlight_start":22,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":695,"byte_end":696,"line_start":20,"line_end":20,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `my_stuff` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":624,"byte_end":632,"line_start":17,"line_end":17,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_stuff.clear(); //~ ERROR cannot borrow","highlight_start":5,"highlight_end":13}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":586,"byte_end":594,"line_start":15,"line_end":15,"column_start":22,"column_end":30,"is_primary":false,"text":[{"text":"    let (_, thing) = my_stuff.iter().next().unwrap();","highlight_start":22,"highlight_end":30}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/hashmap-iter-value-lifetime.rs","byte_start":695,"byte_end":696,"line_start":20,"line_end":20,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
