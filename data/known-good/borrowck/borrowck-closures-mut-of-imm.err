{"message":"two closures require unique access to `x` at the same time","code":{"code":"E0524","explanation":null},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":693,"byte_end":695,"line_start":23,"line_end":23,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"    let c1 = || set(&mut *x);","highlight_start":14,"highlight_end":16}],"label":"first closure is constructed here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":752,"byte_end":754,"line_start":25,"line_end":25,"column_start":14,"column_end":16,"is_primary":true,"text":[{"text":"    let c2 = || set(&mut *x);","highlight_start":14,"highlight_end":16}],"label":"second closure is constructed here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":872,"byte_end":873,"line_start":28,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"borrow from first closure ends here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":706,"byte_end":707,"line_start":23,"line_end":23,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"    let c1 = || set(&mut *x);","highlight_start":27,"highlight_end":28}],"label":"previous borrow occurs due to use of `x` in closure","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":765,"byte_end":766,"line_start":25,"line_end":25,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"    let c2 = || set(&mut *x);","highlight_start":27,"highlight_end":28}],"label":"borrow occurs due to use of `x` in closure","suggested_replacement":null,"expansion":null}],"children":[],"rendered":"error[E0524]: two closures require unique access to `x` at the same time\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs:25:14\n   |\n23 |     let c1 = || set(&mut *x);\n   |              --           - previous borrow occurs due to use of `x` in closure\n   |              |\n   |              first closure is constructed here\n24 |     //~^ ERROR cannot borrow\n25 |     let c2 = || set(&mut *x);\n   |              ^^           - borrow occurs due to use of `x` in closure\n   |              |\n   |              second closure is constructed here\n...\n28 | }\n   | - borrow from first closure ends here\n\n"}
{"message":"cannot borrow immutable item `*x` as mutable","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":700,"byte_end":707,"line_start":23,"line_end":23,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"    let c1 = || set(&mut *x);","highlight_start":21,"highlight_end":28}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":"error[E0596]: cannot borrow immutable item `*x` as mutable\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs:23:21\n   |\n23 |     let c1 = || set(&mut *x);\n   |                     ^^^^^^^ cannot borrow as mutable\n\n"}
{"message":"cannot borrow immutable item `*x` as mutable","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs","byte_start":759,"byte_end":766,"line_start":25,"line_end":25,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"    let c2 = || set(&mut *x);","highlight_start":21,"highlight_end":28}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":"error[E0596]: cannot borrow immutable item `*x` as mutable\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-closures-mut-of-imm.rs:25:21\n   |\n25 |     let c2 = || set(&mut *x);\n   |                     ^^^^^^^ cannot borrow as mutable\n\n"}
{"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 3 previous errors\n\n"}
