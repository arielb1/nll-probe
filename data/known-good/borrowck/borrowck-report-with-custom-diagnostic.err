{"message":"cannot borrow `x` as immutable because it is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":635,"byte_end":636,"line_start":17,"line_end":17,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    let z = &x; //~ ERROR cannot borrow","highlight_start":14,"highlight_end":15}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":583,"byte_end":584,"line_start":15,"line_end":15,"column_start":18,"column_end":19,"is_primary":false,"text":[{"text":"    let y = &mut x;","highlight_start":18,"highlight_end":19}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":700,"byte_end":701,"line_start":19,"line_end":19,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `x` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":962,"byte_end":963,"line_start":29,"line_end":29,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"            let z = &mut x; //~ ERROR cannot borrow","highlight_start":26,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":888,"byte_end":889,"line_start":27,"line_end":27,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"            let y = &x;","highlight_start":22,"highlight_end":23}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1041,"byte_end":1042,"line_start":31,"line_end":31,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        }","highlight_start":9,"highlight_end":10}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `x` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1224,"byte_end":1225,"line_start":41,"line_end":41,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"        let y = &mut x;","highlight_start":22,"highlight_end":23}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1294,"byte_end":1295,"line_start":43,"line_end":43,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"        let z = &mut x; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":23}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1372,"byte_end":1373,"line_start":45,"line_end":45,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    };","highlight_start":5,"highlight_end":6}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `x` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":634,"byte_end":636,"line_start":17,"line_end":17,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let z = &x; //~ ERROR cannot borrow","highlight_start":13,"highlight_end":15}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":578,"byte_end":584,"line_start":15,"line_end":15,"column_start":13,"column_end":19,"is_primary":false,"text":[{"text":"    let y = &mut x;","highlight_start":13,"highlight_end":19}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":700,"byte_end":701,"line_start":19,"line_end":19,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `x` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":957,"byte_end":963,"line_start":29,"line_end":29,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"            let z = &mut x; //~ ERROR cannot borrow","highlight_start":21,"highlight_end":27}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":887,"byte_end":889,"line_start":27,"line_end":27,"column_start":21,"column_end":23,"is_primary":false,"text":[{"text":"            let y = &x;","highlight_start":21,"highlight_end":23}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1041,"byte_end":1042,"line_start":31,"line_end":31,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        }","highlight_start":9,"highlight_end":10}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `x` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1219,"byte_end":1225,"line_start":41,"line_end":41,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"        let y = &mut x;","highlight_start":17,"highlight_end":23}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1289,"byte_end":1295,"line_start":43,"line_end":43,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let z = &mut x; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":23}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-report-with-custom-diagnostic.rs","byte_start":1372,"byte_end":1373,"line_start":45,"line_end":45,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    };","highlight_start":5,"highlight_end":6}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
