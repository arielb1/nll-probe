{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":627,"byte_end":635,"line_start":22,"line_end":22,"column_start":22,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":22,"highlight_end":30}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":658,"byte_end":666,"line_start":23,"line_end":23,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":693,"byte_end":694,"line_start":24,"line_end":24,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":796,"byte_end":804,"line_start":28,"line_end":28,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let _bar2 = &foo.bar1;  //~ ERROR cannot borrow","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":769,"byte_end":777,"line_start":27,"line_end":27,"column_start":22,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":22,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":831,"byte_end":832,"line_start":29,"line_end":29,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":934,"byte_end":942,"line_start":33,"line_end":33,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":903,"byte_end":911,"line_start":32,"line_end":32,"column_start":18,"column_end":26,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1;","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":969,"byte_end":970,"line_start":34,"line_end":34,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1379,"byte_end":1387,"line_start":53,"line_end":53,"column_start":22,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":22,"highlight_end":30}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1426,"byte_end":1439,"line_start":55,"line_end":55,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: _ } => {}","highlight_start":21,"highlight_end":34}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1496,"byte_end":1497,"line_start":58,"line_end":58,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because `foo.bar1.int1` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1596,"byte_end":1604,"line_start":62,"line_end":62,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo1 = &foo.bar1; //~ ERROR cannot borrow","highlight_start":18,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1564,"byte_end":1577,"line_start":61,"line_end":61,"column_start":22,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":22,"highlight_end":35}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1677,"byte_end":1678,"line_start":64,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as immutable because `foo.bar1.int1` is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1647,"byte_end":1651,"line_start":63,"line_end":63,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    let _foo2 = &*foo; //~ ERROR cannot borrow","highlight_start":18,"highlight_end":22}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1564,"byte_end":1577,"line_start":61,"line_end":61,"column_start":22,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":22,"highlight_end":35}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1677,"byte_end":1678,"line_start":64,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1745,"byte_end":1758,"line_start":67,"line_end":67,"column_start":22,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":22,"highlight_end":35}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1781,"byte_end":1789,"line_start":68,"line_end":68,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1815,"byte_end":1816,"line_start":69,"line_end":69,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as mutable more than once at a time (Ast)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1884,"byte_end":1897,"line_start":72,"line_end":72,"column_start":22,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":22,"highlight_end":35}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1920,"byte_end":1924,"line_start":73,"line_end":73,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":26}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1950,"byte_end":1951,"line_start":74,"line_end":74,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because `foo.bar1.int1` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2050,"byte_end":2058,"line_start":78,"line_end":78,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2014,"byte_end":2027,"line_start":77,"line_end":77,"column_start":18,"column_end":31,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1.int1;","highlight_start":18,"highlight_end":31}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2084,"byte_end":2085,"line_start":79,"line_end":79,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `*foo` as mutable because `foo.bar1.int1` is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2185,"byte_end":2189,"line_start":83,"line_end":83,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":26}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2149,"byte_end":2162,"line_start":82,"line_end":82,"column_start":18,"column_end":31,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1.int1;","highlight_start":18,"highlight_end":31}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2215,"byte_end":2216,"line_start":84,"line_end":84,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable field `foo.bar1` as mutable (Ast)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2504,"byte_end":2512,"line_start":98,"line_end":98,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":22,"highlight_end":30}],"label":"cannot mutably borrow immutable field","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2475,"byte_end":2479,"line_start":97,"line_end":97,"column_start":29,"column_end":33,"is_primary":false,"text":[{"text":"fn borrow_mut_from_imm(foo: &Foo) {","highlight_start":29,"highlight_end":33}],"label":"use `&mut Foo` here to make mutable","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":622,"byte_end":635,"line_start":22,"line_end":22,"column_start":17,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":17,"highlight_end":30}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":653,"byte_end":666,"line_start":23,"line_end":23,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":693,"byte_end":694,"line_start":24,"line_end":24,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":795,"byte_end":804,"line_start":28,"line_end":28,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _bar2 = &foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":764,"byte_end":777,"line_start":27,"line_end":27,"column_start":17,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":17,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":831,"byte_end":832,"line_start":29,"line_end":29,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":929,"byte_end":942,"line_start":33,"line_end":33,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":902,"byte_end":911,"line_start":32,"line_end":32,"column_start":17,"column_end":26,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1;","highlight_start":17,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":969,"byte_end":970,"line_start":34,"line_end":34,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1374,"byte_end":1387,"line_start":53,"line_end":53,"column_start":17,"column_end":30,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1;","highlight_start":17,"highlight_end":30}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1426,"byte_end":1439,"line_start":55,"line_end":55,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"        Foo { bar1: ref mut _bar1, bar2: _ } => {}","highlight_start":21,"highlight_end":34}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1496,"byte_end":1497,"line_start":58,"line_end":58,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1595,"byte_end":1604,"line_start":62,"line_end":62,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo1 = &foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1559,"byte_end":1577,"line_start":61,"line_end":61,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":17,"highlight_end":35}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1677,"byte_end":1678,"line_start":64,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1646,"byte_end":1651,"line_start":63,"line_end":63,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    let _foo2 = &*foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":22}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1559,"byte_end":1577,"line_start":61,"line_end":61,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":17,"highlight_end":35}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1677,"byte_end":1678,"line_start":64,"line_end":64,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1740,"byte_end":1758,"line_start":67,"line_end":67,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":17,"highlight_end":35}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1776,"byte_end":1789,"line_start":68,"line_end":68,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1815,"byte_end":1816,"line_start":69,"line_end":69,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as mutable more than once at a time (Mir)","code":{"code":"E0499","explanation":"\nA variable was borrowed as mutable more than once. Erroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in rust, you can either have many immutable references, or one\nmutable reference. Take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html for more\ninformation. Example:\n\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1879,"byte_end":1897,"line_start":72,"line_end":72,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    let _bar1 = &mut foo.bar1.int1;","highlight_start":17,"highlight_end":35}],"label":"first mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1915,"byte_end":1924,"line_start":73,"line_end":73,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"second mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":1950,"byte_end":1951,"line_start":74,"line_end":74,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"first borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2045,"byte_end":2058,"line_start":78,"line_end":78,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2013,"byte_end":2027,"line_start":77,"line_end":77,"column_start":17,"column_end":31,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1.int1;","highlight_start":17,"highlight_end":31}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2084,"byte_end":2085,"line_start":79,"line_end":79,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `(*foo)` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2180,"byte_end":2189,"line_start":83,"line_end":83,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    let _foo2 = &mut *foo; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":26}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2148,"byte_end":2162,"line_start":82,"line_end":82,"column_start":17,"column_end":31,"is_primary":false,"text":[{"text":"    let _bar1 = &foo.bar1.int1;","highlight_start":17,"highlight_end":31}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2215,"byte_end":2216,"line_start":84,"line_end":84,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"immutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow immutable item `foo.bar1` as mutable (Mir)","code":{"code":"E0596","explanation":"\nThis error occurs because you tried to mutably borrow a non-mutable variable.\n\nExample of erroneous code:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-reborrow-from-mut.rs","byte_start":2499,"byte_end":2512,"line_start":98,"line_end":98,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    let _bar1 = &mut foo.bar1; //~ ERROR cannot borrow","highlight_start":17,"highlight_end":30}],"label":"cannot borrow as mutable","suggested_replacement":null,"expansion":null}],"children":[{"message":"Value not mutable causing this error: `(*foo)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":null}
{"message":"aborting due to 22 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
