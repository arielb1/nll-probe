{"message":"blocks in constants are limited to items and tail expressions","code":{"code":"E0016","explanation":"\nBlocks in constants may only contain items (such as constant, function\ndefinition, etc...) and a tail expression. Erroneous code example:\n\n```compile_fail,E0016\nconst FOO: i32 = { let x = 0; x }; // 'x' isn't an item!\n```\n\nTo avoid it, you have to replace the non-item object:\n\n```\nconst FOO: i32 = { const X : i32 = 0; X };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":612,"byte_end":613,"line_start":14,"line_end":14,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"        let p = 3;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"blocks in constants are limited to items and tail expressions","code":{"code":"E0016","explanation":"\nBlocks in constants may only contain items (such as constant, function\ndefinition, etc...) and a tail expression. Erroneous code example:\n\n```compile_fail,E0016\nconst FOO: i32 = { let x = 0; x }; // 'x' isn't an item!\n```\n\nTo avoid it, you have to replace the non-item object:\n\n```\nconst FOO: i32 = { const X : i32 = 0; X };\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":487,"byte_end":753,"line_start":12,"line_end":17,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    const z: &'static isize = {","highlight_start":5,"highlight_end":32},{"text":"        //~^ ERROR blocks in constants are limited to items and tail expressions","highlight_start":1,"highlight_end":81},{"text":"        let p = 3;","highlight_start":1,"highlight_end":19},{"text":"        //~^ ERROR blocks in constants are limited to items and tail expressions","highlight_start":1,"highlight_end":81},{"text":"        &p //~ ERROR `p` does not live long enough","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"`p` does not live long enough (Ast)","code":{"code":"E0597","explanation":"\nThis error occurs because a borrow was made inside a variable which has a\ngreater lifetime than the borrowed one.\n\nExample of erroneous code:\n\n```compile_fail,E0597\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet mut x = Foo { x: None };\nlet y = 0;\nx.x = Some(&y); // error: `y` does not live long enough\n```\n\nIn here, `x` is created before `y` and therefore has a greater lifetime. Always\nkeep in mind that values in a scope are dropped in the opposite order they are\ncreated. So to fix the previous example, just make the `y` lifetime greater than\nthe `x`'s one:\n\n```\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet y = 0;\nlet mut x = Foo { x: None };\nx.x = Some(&y);\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":705,"byte_end":706,"line_start":16,"line_end":16,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        &p //~ ERROR `p` does not live long enough","highlight_start":10,"highlight_end":11}],"label":"does not live long enough","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":751,"byte_end":752,"line_start":17,"line_end":17,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    };","highlight_start":5,"highlight_end":6}],"label":"borrowed value only lives until here","suggested_replacement":null,"expansion":null}],"children":[{"message":"borrowed value must be valid for the static lifetime...","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":null}
{"message":"cannot assign to `p` because it is borrowed (Mir)","code":{"code":"E0506","explanation":"\nThis error occurs when an attempt is made to assign to a borrowed value.\n\nExample of erroneous code:\n\n```compile_fail,E0506\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let fancy_ref = &fancy_num;\n    fancy_num = FancyNum { num: 6 };\n    // error: cannot assign to `fancy_num` because it is borrowed\n\n    println!(\"Num: {}, Ref: {}\", fancy_num.num, fancy_ref.num);\n}\n```\n\nBecause `fancy_ref` still holds a reference to `fancy_num`, `fancy_num` can't\nbe assigned to a new value as it would invalidate the reference.\n\nAlternatively, we can move out of `fancy_num` into a second `fancy_num`:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n    let moved_num = fancy_num;\n    fancy_num = FancyNum { num: 6 };\n\n    println!(\"Num: {}, Moved num: {}\", fancy_num.num, moved_num.num);\n}\n```\n\nIf the value has to be borrowed, try limiting the lifetime of the borrow using\na scoped block:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    {\n        let fancy_ref = &fancy_num;\n        println!(\"Ref: {}\", fancy_ref.num);\n    }\n\n    // Works because `fancy_ref` is no longer in scope\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n```\n\nOr by moving the reference into a function:\n\n```\nstruct FancyNum {\n    num: u8,\n}\n\nfn main() {\n    let mut fancy_num = FancyNum { num: 5 };\n\n    print_fancy_ref(&fancy_num);\n\n    // Works because function borrow has ended\n    fancy_num = FancyNum { num: 6 };\n    println!(\"Num: {}\", fancy_num.num);\n}\n\nfn print_fancy_ref(fancy_ref: &FancyNum){\n    println!(\"Ref: {}\", fancy_ref.num);\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":704,"byte_end":706,"line_start":16,"line_end":16,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        &p //~ ERROR `p` does not live long enough","highlight_start":9,"highlight_end":11}],"label":"borrow of `p` occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/issue-18118.rs","byte_start":752,"byte_end":752,"line_start":17,"line_end":17,"column_start":6,"column_end":6,"is_primary":true,"text":[{"text":"    };","highlight_start":6,"highlight_end":6}],"label":"assignment to borrowed `p` occurs here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
