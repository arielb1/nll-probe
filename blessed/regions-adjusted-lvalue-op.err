{"message":"cannot borrow `v` as immutable because it is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":741,"byte_end":742,"line_start":24,"line_end":24,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":17,"highlight_end":18}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":729,"byte_end":730,"line_start":24,"line_end":24,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":5,"highlight_end":6}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":742,"byte_end":743,"line_start":24,"line_end":24,"column_start":18,"column_end":19,"is_primary":false,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":18,"highlight_end":19}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `v` as immutable because it is also borrowed as mutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":810,"byte_end":811,"line_start":25,"line_end":25,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":17,"highlight_end":18}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":800,"byte_end":801,"line_start":25,"line_end":25,"column_start":7,"column_end":8,"is_primary":false,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":7,"highlight_end":8}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":811,"byte_end":812,"line_start":25,"line_end":25,"column_start":18,"column_end":19,"is_primary":false,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":18,"highlight_end":19}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `v` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":740,"byte_end":742,"line_start":24,"line_end":24,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":16,"highlight_end":18}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":729,"byte_end":730,"line_start":24,"line_end":24,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":5,"highlight_end":6}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":742,"byte_end":743,"line_start":24,"line_end":24,"column_start":18,"column_end":19,"is_primary":false,"text":[{"text":"    v[0].oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":18,"highlight_end":19}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"cannot borrow `v` as immutable because it is also borrowed as mutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":809,"byte_end":811,"line_start":25,"line_end":25,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":16,"highlight_end":18}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":800,"byte_end":801,"line_start":25,"line_end":25,"column_start":7,"column_end":8,"is_primary":false,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":7,"highlight_end":8}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/home/ariel/Rust/rust-emergency/src/test/compile-fail/regions-adjusted-lvalue-op.rs","byte_start":811,"byte_end":812,"line_start":25,"line_end":25,"column_start":18,"column_end":19,"is_primary":false,"text":[{"text":"    (*v).oh_no(&v); //~ ERROR cannot borrow `v` as immutable because","highlight_start":18,"highlight_end":19}],"label":"mutable borrow ends here","suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":null}
